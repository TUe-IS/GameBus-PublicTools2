/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pietervangorp.gamebus.util;

import com.google.gson.Gson;
import com.pietervangorp.gamebus.util.entity.AccountDemo;
import com.pietervangorp.gamebus.util.entity.LocationDemo; 
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author praghletoos
 */
public class DataAccessHelper {
    
    private static EntityManagerFactory factory;
    private static EntityManager eManager;
    public static void createFactory(String pName){
        if(eManager != null && eManager.isOpen()){
            eManager.close();
        }
        if(factory!=null && factory.isOpen()){
            factory.close();
        }
        factory = Persistence.createEntityManagerFactory(pName);
        eManager = factory.createEntityManager();
    }
    
    /**
     * A helper method to retrieve JSON objects and converting them to java beans
     * @param <T>  type of JSON object 
     * @param url JSON resource
     * @param clazz statically declaring the type of JSON object
     * @return list of java objects containing JSON values
     */
    public static <T> List<T> retrieveJson(String url,Class<T> clazz){
        List<T> res = new ArrayList<>();
        try{
            T data[] = (T[]) new Gson().fromJson(new InputStreamReader(
                    new URL(url).
                            openStream()),Array.newInstance(clazz, 0).getClass());
            
            res = Arrays.asList(data);
        }catch(Exception e){
            e.printStackTrace();
        }
        return  res;
    }
    
    private static boolean isFactoryOpen(){
        return (factory != null && eManager != null && factory.isOpen() && eManager.isOpen());
    }
    
    public static void startEditing(){
        if(isFactoryOpen()){
            eManager.getTransaction().begin();
        }
    }
    
    public static void closeEverything(){
        if(isFactoryOpen()){
            eManager.close();;
            eManager = null;
            
            factory.close();
            factory = null;
        }
    }
    
    public static void saveChages(){
        if(isFactoryOpen()){
            eManager.getTransaction().commit();;
        }
    }
    // a conveinient method to read data from all tables
    // it is important that the entity classes have a named query called: (name).findAll
    public static <T> List<T> findAll(Class<T> clazz){
        if(!isFactoryOpen()){
            return null;
        }
        return eManager.createNamedQuery(clazz.getSimpleName()+".findAll", clazz).getResultList();
    }
    
    // LocationDemo and all its content are generated by the IDE
    public static List<LocationDemo> getAllLocations(){
        if(!isFactoryOpen()){
            return null;
        }
        return eManager.createNamedQuery("LocationDemo.findAll", LocationDemo.class).getResultList();
    }
    
    
    // AccountDemo and all its content are generated by the IDE
    public static List<AccountDemo> getAllAccounts(){
        if(!isFactoryOpen()){
            return null;
        }
        return eManager.createNamedQuery("AccountDemo.findAll", AccountDemo.class).getResultList();
    }
    
    
}

